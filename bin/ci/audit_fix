#!/bin/bash
export BOT_BRANCH='audit_fix'
raise()
{
  echo "${1}" >&2
}

check_required_environment() {
  local required_env="CI_PROJECT_NAME BOT_KEY BOT_USER CI_PROJECT_URL CI_API_V4_URL CI_PROJECT_ID AUDIT_REVIEWERS DRACS_GITLAB_KEY"

  for reqvar in $required_env
  do
    if [ -z "${!reqvar}" ]
    then
      raise "missing ENVIRONMENT ${reqvar}!"
      return 1
    fi
  done
}

branch_exists() {
  git branch | grep "${1}"
}

initialize_bot_branch() {
  if branch_exists "${BOT_BRANCH}"
  then
    git checkout ${BOT_BRANCH}
  else
    git checkout -b ${BOT_BRANCH}
  fi
}

initialize_bot_remote() {
  git remote add bot_remote "$(echo "${CI_PROJECT_URL}" | sed "s|\(https*\://\)|\1${BOT_USER}:${BOT_KEY}@|")"
  git config user.name "${BOT_USER}"
  git config user.email "${BOT_USER}@duke.edu"
}

setup_modules() {
  npm install npm@latest -g --prefix node_modules
}

detect_changes() {
  node_modules/bin/npm audit --json | tee -a audit_report.json
  node_modules/bin/npm audit fix --force
}

push_changes() {
  git add .
  git commit -m 'audit_fix bot update'
  git push bot_remote ${BOT_BRANCH}
}

merge_request_exists() {
  curl -H "Private-Token: ${BOT_KEY}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests?scope=created_by_me&source_branch=${BOT_BRANCH}&target_branch=master&wip=yes&state=opened" | grep "${BOT_BRANCH}"
}

notify_changes() {
  merge_request_exists && return
  local title="WIP: Audit Detected Issues"
  local body="${AUDIT_REVIEWERS} check ${BOT_BRANCH} pipeline to ensure tests pass before merging"
  curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" \
       -H "Private-Token: ${BOT_KEY}" \
       -d "{\"source_branch\":\"${BOT_BRANCH}\",\"target_branch\":\"master\",\"title\":\"${title}\",\"description\":\"${description}\"}" \
       "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests"
}

run_main() {
  check_required_environment || return 1
  initialize_bot_branch || return 1
  initialize_bot_remote || return 1
  setup_modules || return 1

  node_modules/bin/npm i --package-lock-only | tee -a /tmp/npm_install.out
  if grep 'npm audit fix' /tmp/npm_install.out
  then
    detect_changes || return 1
    push_changes || return 1
    notify_changes || return 1
  else
    raise "No Audit problems Detected"
  fi
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
  run_main
  exit $?
fi
